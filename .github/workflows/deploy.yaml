name: CD Pipeline

on:
  push:
    branches:
      - feature/cd

  pull_request:
    branches:
      - main

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest
    defaults:
        run:
            working-directory: ./back
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          path: .env
          env: |
            DB_HOST=${{ secrets.DATABASE_HOST }}
            DB_PORT=${{ secrets.DATABASE_PORT }}
            DB_USER=${{ secrets.DATABASE_USER }}
            DB_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            DB_NAME=${{ secrets.DATABASE_NAME }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            COOKIE_SECURE=true
            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
            RESEND_SENDER=noreply@uresport.fr

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Debug files
        run: ls -la

      - name: Build and push Golang Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile-prod
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/uresports-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/uresports-api:latest
          cache-to: type=inline

  deploy_api_to_railway:
    needs: build_and_push_docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Railway CLI
        run: pnpm install -g railway

      - name: Deploy to Railway
        run: |         
            railway login --token ${{ secrets.RAILWAY_TOKEN }}
            railway deploy --project ${{ secrets.RAILWAY_PROJECTID }} --image sunshiotv/uresports-api:latest
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy_apk_and_ios_with_fastlane:
    needs: deploy_api_to_railway
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Deploy APK and iOS build with Fastlane
        run: bundle exec fastlane deploy

  deploy_web_to_vercel:
    needs: deploy_apk_and_ios_with_fastlane
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-


      - name: Install Vercel CLI
        run: pnpm install -g vercel

      - name: Build Flutter Web App
        run: flutter build web

      - name: Deploy to Vercel
        run: vercel --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}